/ High Scores.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//Использование алгоритмов библиотеки STL для поиска, перемешивания и сортировки

#include <iostream>
#include <vector>
#include <algorithm> //Подключаем стандартную библиотеку для использования функций алгоритмов
#include <ctime>
#include <cstdlib>
using namespace std;
int main()
{
    vector<int>::const_iterator iter;
    cout << "Creating a list scores.\n";
    vector<int> scores;
    scores.push_back(1500);
    scores.push_back(3500);
    scores.push_back(7500);
    cout << "High scores:\n";
    for (iter = scores.begin(); iter != scores.end(); ++iter) {
        cout << *iter << endl;
    }
    cout << "Finding scores:\n";
    int score;
    cout << "Enter score to find: ";
    cin >> score;
    iter = find(scores.begin(), scores.end(), score); //Используем стандартный алгоритм посика - задаем начало диапазонв, конец диапазона, искомое значение
    if (iter != scores.end()) {
        cout << "Score found.\n";
    }
    else {
        cout << "Score not found.\n";
    }
    cout << "Randomize scores.\n";
    srand(static_cast<unsigned int>(time(0))); //посев генератора случайного числа (число зависит от времени)
    random_shuffle(scores.begin(), scores.end()); //запускаем алгоритм случайной сортировки диапазона объектов в векторе - начало диапазона, конец диапазона.
    cout << "High scores: \n";
    for (iter - scores.begin(); iter != scores.end(); ++iter) {
        cout << *iter << endl;
    }
    cout << "Sortings scores: \n";
    sort(scores.begin(), scores.end()); //алгоритом сортирует диапазон объектов вектора в порядке возрастания - начало диапазона, конец диапазона.
    cout << "High scores:\n";
    for (iter = scores.begin(); iter != scores.end(); ++iter) {
        cout << *iter << endl;
    }
    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
