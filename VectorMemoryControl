// MemoryControl.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//Контроль размера памяти вектора

#include <iostream>
#include <vector>
using namespace std;

int main()
{
    cout << "Creating a 10 element vector to hold scores.\n";
    vector<int>scores(10, 0); //задем вектор
    cout << "Vector size is : " << scores.size() << endl; //Размер вектора
    cout << "Vector capacity is : " << scores.capacity() << endl; //размер памяти которую занимает вектор
    cout << "Adding a score.\n"; 
    scores.push_back(0); // добавим объект
    cout << "Vector new size is: " << scores.size() << endl; // Новый размер вектора
    cout << "Vector new capacity is : " << scores.capacity() << endl; //В ответ на добавление объекта память вектора заметно увелисилась
    cout << "Vectors capacity control with reserve().\n\n" << endl;
    cout << "Reserving more memory.\n"; 
    scores.reserve(12); //резервируем память еще для 1 элементов
    cout << "Vector size is : " << scores.size() << endl;
    cout << "Vector capacity is: " << scores.capacity() << endl; //Размер памяти вектора 
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
