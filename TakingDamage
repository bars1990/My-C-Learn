// TakingDamage.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//Программа демонстрирует подстановку функций (в случае с небольшими функциями помогает ускорить программу)

#include <iostream>
int radiation(int health);
using namespace std;
int main()
{
    int health = 80;
    cout << "Your health is: " << health << endl;
    health = radiation(health); //Вызов подставленной функиции
    cout << "After radiation explosur your health is: " << health << endl;
    health = radiation(health);
    cout << "After radiation explosur your health is: " << health << endl;
    health = radiation(health);
    cout << "After radiation explosur your health is: " << health << endl;
    return 0;
}
inline int radiation(int health) { //ключевое слово inline призывает компилятор подставлять функцию везде где используется ее имя
    return (health / 2);
}
/* ВАЖНО подствляя функцию мы фактически запрашиваем у компилятора разрешение на подстановку функции
Если компилятор сочтет что из за подстановки ухудшидся производительность программы то он
ФУНКЦИЮ НЕ ПОДСТАВИТ*/

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
