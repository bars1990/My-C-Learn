// Hangman.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//Первый проек игра "Виселица"
/*Проект на псевдокоде
Создать подборку слов
Выбрать из подборки слово и загадать его
Если игрок еще не превысил лимит ошиьок и не разгадал слово, то
    сообщить игроку сколько ошибок он еще может допустить
    показать игроку отгаданные буквы
    показать игроку какую часть слова он уже открыл
    получить от игрока следующий вариант буквы
    Если игрок предложил букву которую уже отгадал
        получить вариант игрока
        добавить новый вариант в уже использованные буквы
    Если предложенная буква имеется в загаданном слове
        сообщить юзеру что догадка верная
        добавить в уже имеющийся фрагмент слова угаданную букву
    иначе
        сообщить игроку что его вариант не верный
        увеличить на 1 кол-во допущенных ошибок
    Если игрок допустил слишком много ошибок
       Сообщить ему что он повешен
    Иначе
        поздравить игрока с победой
        */

#include <iostream>
#include<string>
#include <vector>
#include <algorithm>
#include<ctime>
#include<cctype> //содержит функции для перевода символов в верхний регистр, испозуем для сравнения отдельных символов
using namespace std;

int main()
{
    //подготовка
    const int MAX_WRONG = 8; //максимальное кол-во ошибок
    vector<string> words; //вектор с подборкой слов для загадывания
    words.push_back("GUESS");
    words.push_back("HANGMAN");
    words.push_back("DIFFICULT");
    srand(static_cast<unsigned int>(time(0)));
    random_shuffle(words.begin(), words.end());
    const string THE_WORD = words[0];
    int wrong = 0;
    string soFar(THE_WORD.size(), '-');
    string used = "";
    cout << "Welcome to hangman. Good luck!\n";
    //Основной цикл
    while ((wrong < MAX_WRONG) && (soFar != THE_WORD)) {
        cout << "\n\nYou have " << (MAX_WRONG - wrong) << " incorrect guess left.\n";
        cout << "\nYou've used the following letters:\n" << used << endl;
        cout << "\nSo far, is word is:\n" << soFar << endl;
        char guess; //пошлучаем от пользователя одну из догадок
        cout << "\n\nEnter your guess: ";
        cin >> guess;
        guess = toupper(guess); //переводим в верхний регистр с помощью функции , т.к. все лова у нас в верхнем регистре
        while (used.find(guess) != string::npos) {
            cout << "\nYou've alredy guessed " << guess << endl;
            cout << "ENter your guess: ";
            cin >> guess;
            guess = toupper(guess);
        }
        used += guess;
        if (THE_WORD.find(guess) != string::npos) {
            cout << "That's right! " << guess << " is inthe word.\n";
            for (int i = 0; i < THE_WORD.length(); ++i) { //обновляем переменную soFar  ыулючая в нее новую угаданную букву
                if (THE_WORD[i] == guess) {
                    soFar[i] = guess;
                }
            }
        }
        else {
            cout << "Sorry. " << guess << " is'nt the word.\n";
            ++wrong;
        }
    }
    //конец игры
    if (wrong == MAX_WRONG) {
        cout << "\nYou've been hanged!\n";
    }
    else {
        cout << "\nYou guessed it!";
    }
    cout << "THe Word has " << THE_WORD << endl;
    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
