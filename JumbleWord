// WordJumble.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <string>
#include <cstdlib>
#include <ctime>
#include <locale.h> //Делаем русский язык для консоли
#include <windows.h> //Делаем русский язык для ввода и вывода  на консоли
using namespace std;

int main()
{
    setlocale(LC_ALL, "Russian"); //Кириллица для консоли
    SetConsoleOutputCP(1251); //Код кириллицы на вывод консоли
    SetConsoleCP(1251); //Код кириллицы на ввод консоли
    enum fields { WORD, HINT, NUM_FIELDS };
    const int NUM_WORDS = 5;
    const string WORDS[NUM_WORDS][NUM_FIELDS] =
    {
        {"стена", "А ты в нее врезался головой хоть раз?"},
        {"очки", "С этим ты будешь видеть лучше."},
        {"Лаборатория", "А ты там был хоть раз?"},
        {"собака", "В детстве все хотели её."},
        {"jumble", "Этим все сказано об игре."}

    };
    srand(static_cast<unsigned int>(time(0))); //генерируем случайное число
    int choise = (rand() % NUM_WORDS);
    string theWord = WORDS[choise][WORD]; //слово которое нужно угадать
    string theHint = WORDS[choise][HINT]; //подсказка для слова
    string jumble = theWord; //перемешанный вариант слова
    int length = jumble.size();
    for (int i = 0; i < length; ++i) {
        int index1 = (rand() % length);
        int index2 = (rand() % length);
        char temp = jumble[index1];
        jumble[index1] = jumble[index2];
        jumble[index2] = temp;
    }
    cout << "\t\tДобро пожаловать в Словемеску!\n\n";
    cout << "В смеси букв спрятано слово.\n";
    cout << "Введи 'подсказка' что бы получить подсказку.\n";
    cout << "Введи 'quit' что бы выйти из игры.\n";
    cout << "\n\nСмесь букв: \n" << jumble;
    string guess;
    cout << "\nТвой ответ: ";
    cin >> guess;
    while ((guess != theWord) && (guess != "quit")) {
        if (guess == "подсказка") {
            cout << theHint;
        }
        else {
            cout << "Извини, но это не верно.";
        }
        cout << "\nТвой ответ: ";
        cin >> guess;
    }
    if (guess == theWord) {
        cout << "\nТочно! Твой ответ верный!\n";
    }
    cout << "\nСпасибо за игру.\n";
    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
