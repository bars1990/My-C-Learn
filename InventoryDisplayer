// InventoryDisplayer.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//Программа демонстрирует передачу ссылок для обеспечения эффективности
/*При передачи значений которые занимают большой объем памяти лучше использовать передачу
по ссылке. при это если нужно оставить значение неизменным можно использовать константную ссылку*/

#include <iostream>
#include <string>
#include<vector>
using namespace std;
void display(const vector<string>& inventory);//Обявляем функцию с константной ссылкой на вектор inventory
int main()
{
    vector<string> inventory; //объявляем вектор
    inventory.push_back("sword");
    inventory.push_back("armor");
    inventory.push_back("shield");
    display(inventory);
    return 0;
    
}
void display(const vector<string>& vec) {//vec - жто константная ссылка на вектор строк
    cout << "Your items: " << endl;
    for (vector<string> ::const_iterator iter = vec.begin(); 
        iter != vec.end(); ++iter) { //Присваиваем вектору константный итератор
        cout << *iter << endl;//Выводим на экран значение итератора
    }
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
